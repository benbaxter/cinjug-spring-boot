<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.util.StringUtils"/>
<fullyQualifiedTypeName name="java.util.stream.Collector"/>
<fullyQualifiedTypeName name="java.util.stream.Collectors"/>
<fullyQualifiedTypeName name="io.benbaxter.guestbook.service.InMemoryGuestBookService"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="io.benbaxter.guestbook.web.controller.GuestBookController"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.ViewResolver"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.view.InternalResourceViewResolver"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.properties.EnableConfigurationProperties"/>
<fullyQualifiedTypeName name="io.benbaxter.guestbook.web.config.AppConfig"/>
<fullyQualifiedTypeName name="org.springframework.boot.builder.SpringApplicationBuilder"/>
<fullyQualifiedTypeName name="org.springframework.boot.context.web.SpringBootServletInitializer"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
<fullyQualifiedTypeName name="io.benbaxter.guestbook.service.GuestBookService"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.databind.annotation.JsonSerialize"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.google.common.collect.Lists"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.condition.ConditionalOnClass"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"/>
<fullyQualifiedTypeName name="io.benbaxter.guestbook.service.GuestBookRepositoryService"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.support.SimpleJpaRepository"/>
<fullyQualifiedTypeName name="javax.persistence.PersistenceContext"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="org.springframework.data.web.config.EnableSpringDataWebSupport"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.EnableJpaRepositories"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
<fullyQualifiedTypeName name="org.springframework.boot.orm.jpa.EntityScan"/>
<fullyQualifiedTypeName name="io.benbaxter.guestbook.model.Person"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Import"/>
<fullyQualifiedTypeName name="io.benbaxter.guestbook.web.config.RepositoryConfig"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Qualifier"/>
<fullyQualifiedTypeName name="io.benbaxter.guestbook.repository.PersonRepository"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.query.Param"/>
<fullyQualifiedTypeName name="org.hsqldb.jdbc.JDBCDriver"/>
<fullyQualifiedTypeName name="org.h2.Driver"/>
<fullyQualifiedTypeName name="org.springframework.transaction.annotation.Transactional"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.security.web.util.matcher.AntPathRequestMatcher"/>
<fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.ViewControllerRegistry"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="java.security.Principal"/>
<fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
<fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContext"/>
<fullyQualifiedTypeName name="org.springframework.security.access.annotation.Secured"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
</qualifiedTypeNameHistroy>
